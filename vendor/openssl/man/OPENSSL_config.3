.\"	$OpenBSD: OPENSSL_config.3,v 1.6 2017/07/06 15:42:04 schwarze Exp $
.\"	OpenSSL ab6577a4 May 14 21:07:51 2014 +0100
.\"
.\" This file was written by Dr. Stephen Henson <steve@openssl.org>.
.\" Copyright (c) 2000, 2004, 2005 The OpenSSL Project.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. All advertising materials mentioning features or use of this
.\"    software must display the following acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
.\"
.\" 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
.\"    endorse or promote products derived from this software without
.\"    prior written permission. For written permission, please contact
.\"    openssl-core@openssl.org.
.\"
.\" 5. Products derived from this software may not be called "OpenSSL"
.\"    nor may "OpenSSL" appear in their names without prior written
.\"    permission of the OpenSSL Project.
.\"
.\" 6. Redistributions of any form whatsoever must retain the following
.\"    acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
.\" EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
.\" ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
.\" OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: July 6 2017 $
.Dt OPENSSL_CONFIG 3
.Os
.Sh NAME
.Nm OPENSSL_config ,
.Nm OPENSSL_no_config
.Nd simple OpenSSL configuration functions
.Sh SYNOPSIS
.In openssl/conf.h
.Ft void
.Fo OPENSSL_config
.Fa "const char *config_name"
.Fc
.Ft void
.Fn OPENSSL_no_config void
.Sh DESCRIPTION
.Fn OPENSSL_config
configures OpenSSL using the standard
.Xr openssl.cnf 5
configuration file name using
.Fa config_name .
If
.Fa config_name
is
.Dv NULL
then the default name
.Sy openssl_conf
will be used.
Any errors are ignored.
Further calls to
.Fn OPENSSL_config
will have no effect.
.Pp
.Fn OPENSSL_no_config
disables configuration.
If called before
.Fn OPENSSL_config ,
no configuration takes place.
.Pp
It is
.Sy strongly
recommended that
.Sy all
new applications call
.Fn OPENSSL_config
or the more sophisticated functions such as
.Xr CONF_modules_load 3
during initialization (that is before starting any threads).
By doing this, an application does not need to keep track of all
configuration options and some new functionality can be supported
automatically.
.Pp
It is also possible to automatically call
.Fn OPENSSL_config
when an application calls
.Xr OpenSSL_add_all_algorithms 3
by compiling an application with the preprocessor symbol
.Dv OPENSSL_LOAD_CONF
#define'd.
In this way configuration can be added without source changes.
.Pp
The environment variable
.Ev OPENSSL_CONF
can be set to specify the location of the configuration file.
.Pp
Currently ASN.1 OBJECT and ENGINE configuration can be performed.
.Pp
There are several reasons why calling the OpenSSL configuration routines
is advisable.
For example new ENGINE functionality was added to OpenSSL 0.9.7.
In OpenSSL 0.9.7 control functions can be supported by ENGINEs which can be
used (among other things) to load dynamic ENGINEs from shared libraries
(DSOs).
However very few applications currently support the control interface
and so very few can load and use dynamic ENGINEs.
Equally in future more sophisticated ENGINEs will require certain
control operations to customize them.
If an application calls
.Fn OPENSSL_config
it doesn't need to know or care about ENGINE control operations because
they can be performed by editing a configuration file.
.Pp
Applications should free up configuration at application closedown by
calling
.Xr CONF_modules_free 3 .
.Sh RETURN VALUES
Neither
.Fn OPENSSL_config
nor
.Fn OPENSSL_no_config
return a value.
.Sh FILES
.Bl -tag -width /etc/ssl/openssl.cnf -compact
.It Pa /etc/ssl/openssl.cnf
standard configuration file
.El
.Sh SEE ALSO
.Xr CONF_modules_free 3 ,
.Xr CONF_modules_load 3 ,
.Xr openssl.cnf 5
.Sh HISTORY
.Fn OPENSSL_config
and
.Fn OPENSSL_no_config
first appeared in OpenSSL 0.9.7.
.Sh CAVEATS
The
.Fn OPENSSL_config
function is designed to be a very simple "call it and forget it"
function.
As a result its behaviour is somewhat limited.
It ignores all errors silently and it can only load from the standard
configuration file location for example.
.Pp
It is however
.Sy much
better than nothing.
Applications which need finer control over their configuration
functionality should use the configuration functions such as
.Xr CONF_modules_load 3
directly.
